{"ast":null,"code":"var _jsxFileName = \"/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new/\",\n          className: \"ui primary button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), this.renderAdmin(stream), this.renderCreate]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"StreamList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n  /*, deleteStream, editStream*/\n\n})(StreamList);","map":{"version":3,"sources":["/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderCreate","isSignedIn","textAlign","renderList","streams","map","title","description","id","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAEvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AACF;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AACzB,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,eAAT;AAAyB,UAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKR,KAAL,CAAWS,OAAX,CAAmBC,GAAnB,CAAuBR,MAAM,IAAI;AACtC,0BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBAA0BA,MAAM,CAACS,KAAjC,eACA;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BT,MAAM,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKG,KAAKX,WAAL,CAAiBC,MAAjB,CALH,EAMW,KAAKG,YANhB;AAAA,SAA2BH,MAAM,CAACW,EAAlC;AAAA;AAAA;AAAA;AAAA,cADA;AAWD,KAZM,CAAP;AAaD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKN,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtDsC;;AAuDxC;;AAED,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADJ;AAELL,IAAAA,aAAa,EAAEY,KAAK,CAACG,IAAN,CAAWhB,MAFrB;AAGLG,IAAAA,UAAU,EAAEU,KAAK,CAACG,IAAN,CAAWb;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAeZ,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA;AAAY;;AAAd,CAAlB,CAAP,CAAyEC,UAAzE,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">\n          EDIT\n          </button>\n          <button className=\"ui button negative\">\n          DELETE\n          </button>\n        </div>\n\n      )\n    }\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new/\" className=\"ui primary button\" />\n        </div>\n      )\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n      <div className=\"item\" key={stream.id}>\n        <i className=\"large middle aligned icon camera\" />\n        <div className=\"content\">{stream.title}\n        <div className=\"description\">{stream.description}</div>\n        </div>\n        {this.renderAdmin(stream)}\n                {this.renderCreate}\n\n      </div>\n      )\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h2>StreamList</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { fetchStreams/*, deleteStream, editStream*/ })(StreamList);\n"]},"metadata":{},"sourceType":"module"}
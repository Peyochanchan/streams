{"ast":null,"code":"var _jsxFileName = \"/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport history from '../../history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetch(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"StreamDelete\", /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: \"Are you sure you want to delete this stream\",\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/* const mapStateToProps = (state) => {\n  return { streams: state.streams }\n} */\n\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","connect","fetchStream","deleteStream","history","StreamDelete","Component","componentDidMount","props","fetch","match","params","id","renderActions","render","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzC;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8CAEA,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAC,6CAFV;AAGE,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,QAAA,SAAS,EAAE,MAAMT,OAAO,CAACW,IAAR,CAAa,GAAb;AAJnB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1BwC;AA6B3C;AACA;AACA;;;AAEA,eAAed,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDE,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetch(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return (\n      <React.Fragment>\n        <button className=\"ui button\">Cancel</button>\n        <button className=\"ui button negative\">Delete</button>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n      StreamDelete\n      <Modal\n        title=\"Delete Stream\"\n        content=\"Are you sure you want to delete this stream\"\n        actions={this.renderActions()}\n        onDismiss={() => history.push('/')}\n      />\n      </div>\n    )\n  }\n}\n\n/* const mapStateToProps = (state) => {\n  return { streams: state.streams }\n} */\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}
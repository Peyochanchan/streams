{"ast":null,"code":"var _jsxFileName = \"/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StreamForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), this.props.stream.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/pierrecherbero/code/Peyochanchan/react-grider/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamForm","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBAAO;AAAA,8BACP,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADO,EAEN,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAbsC;;AAgBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions'\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n\n    return <div>\n    <StreamForm />\n    {this.props.stream.title}</div>;\n  };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}